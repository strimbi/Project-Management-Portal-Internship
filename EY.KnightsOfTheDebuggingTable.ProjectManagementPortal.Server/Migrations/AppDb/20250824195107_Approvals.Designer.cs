// <auto-generated />
using System;
using EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250824195107_Approvals")]
    partial class Approvals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.AdvanceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentStageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NextStageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("RequestedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStageId");

                    b.HasIndex("NextStageId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("AdvanceRequests");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Approval", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdvanceRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("StakeholderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceRequestId");

                    b.HasIndex("StakeholderId");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrentStageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStageId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TemplateId");

                    b.ToTable("Projects", null, t =>
                        {
                            t.HasCheckConstraint("CK_Project_EndDate", "EndDate > StartDate");
                        });
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Stages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43684a88-6020-46e8-b4fe-f52294224609"),
                            Description = "Stage for creating the project. This involves defining the project scope, objectives, and key stakeholders to ensure a clear understanding of what the project aims to achieve.",
                            IsMandatory = false,
                            Name = "Create",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("66d76d76-83b4-47a0-bf05-678558c32351"),
                            Description = "Stage for planning the project. This includes developing a detailed project plan that outlines tasks, timelines, resources, and budget requirements to guide the execution phase.",
                            IsMandatory = false,
                            Name = "Plan",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("cc659f0e-fdec-47a2-a0bf-6a3f72b22f94"),
                            Description = "Stage for executing the project. During this phase, the project team carries out the tasks defined in the project plan, ensuring that deliverables are produced on time and within budget.",
                            IsMandatory = true,
                            Name = "Execute",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("dc44b7ac-dcce-4411-bffa-4a7f710a3086"),
                            Description = "Stage for monitoring the project. This involves tracking progress against the project plan, identifying any deviations, and implementing corrective actions to keep the project on track.",
                            IsMandatory = false,
                            Name = "Monitor",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("5c11ce04-04f4-4234-b242-2d68d84f2fa5"),
                            Description = "Stage for closing the project. This includes finalizing all project activities, obtaining stakeholder approval, and conducting a post-project review to capture lessons learned for future projects.",
                            IsMandatory = false,
                            Name = "Close",
                            Order = 5
                        });
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stakeholder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Stakeholders");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Tasks", null, t =>
                        {
                            t.HasCheckConstraint("CK_Task_EndDate", "EndDate > StartDate");
                        });
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Template", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("StageTemplate", b =>
                {
                    b.Property<Guid>("StagesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StagesId", "TemplateId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateStages", (string)null);
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.AdvanceRequest", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stage", "CurrentStage")
                        .WithMany()
                        .HasForeignKey("CurrentStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stage", "NextStage")
                        .WithMany()
                        .HasForeignKey("NextStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", "Project")
                        .WithOne("AdvanceRequest")
                        .HasForeignKey("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.AdvanceRequest", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStage");

                    b.Navigation("NextStage");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Approval", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.AdvanceRequest", "AdvanceRequest")
                        .WithMany("Approvals")
                        .HasForeignKey("AdvanceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stakeholder", "Stakeholder")
                        .WithMany("Approvals")
                        .HasForeignKey("StakeholderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AdvanceRequest");

                    b.Navigation("Stakeholder");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stage", "CurrentStage")
                        .WithMany()
                        .HasForeignKey("CurrentStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Template", "Template")
                        .WithMany("Projects")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CurrentStage");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Resource", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", "Project")
                        .WithMany("Resources")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stakeholder", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", "Project")
                        .WithMany("Stakeholders")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Task", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Resource", "Resource")
                        .WithMany("Tasks")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Project");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("StageTemplate", b =>
                {
                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stage", null)
                        .WithMany()
                        .HasForeignKey("StagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Template", null)
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.AdvanceRequest", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Project", b =>
                {
                    b.Navigation("AdvanceRequest");

                    b.Navigation("Resources");

                    b.Navigation("Stakeholders");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Resource", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Stakeholder", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("EY.KnightsOfTheDebuggingTable.ProjectManagementPortal.Server.Models.Template", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
